import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class Main {
    public static void main(String[] args) {
    System.setProperty ("webdriver.chrome.driver", "d:гк/chromedriver.exe");
    WebDriver driver = new ChromeDriver();
    driver.get("https://google.com");
    //driver.close();
        driver.manage().window().maximize();
        String title=driver.getTitle();
        System.out.println(title);
    }
}


public class String2 {
    public static void main(String[] args) {
        String str = "w3resource.com";
        System.out.println("Original String : " + str);

        // codepoint at index 1
        int val1 = str.codePointAt(1);

        // codepoint at index 9
        int val2 = str.codePointAt(9);

        // prints character at index1 in string
        System.out.println("Character(unicode point) = " + val1);
        // prints character at index9 in string
        System.out.println("Character(unicode point) = " + val2);
    }
}


import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.jupiter.*;
import org.junit.jupiter.api.Assertions;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class GoogleTest {
    private static WebDriver driver;
    @BeforeClass
    public static void openBrowser(){
            //Assertions.assertEquals("","");
            System.setProperty("webdriver.chrome.driver", "d:/гк/chromedriver.exe");
            driver = new ChromeDriver();
            driver.get("https://google.com");
            driver.manage().window().maximize();
        }
        @AfterClass
        public static void closeBrowser(){
        //driver.close();
    }
    @Test
    public void getTitle(){
        Assertions.assertEquals("Google",driver.getTitle());
    }
    @Test
    public void getUrl(){
        Assertions.assertTrue(
                driver.getCurrentUrl().contains("google.com"));
    }

    @Test
    public void search(){
        String text = "text";
        WebElement input = driver.findElement(By.xpath("//input[@title='Поиск']"));
        input.sendKeys(text);
        input.sendKeys(Keys.ENTER);
        //Проверка, что поиск состоялся
        Assertions.assertTrue(driver.getCurrentUrl().contains("google.com/search"));
    }
}


import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.jupiter.api.Assertions.*;

public class String2Test {
    private static final ByteArrayOutputStream out = new ByteArrayOutputStream();
    private static final PrintStream origOut = System.out;

    @BeforeClass
    public static void setupStream(){
        System.setOut(new PrintStream(out));
    }

    @AfterClass
    public static void restoreStream(){
        System.setOut(origOut);
    }

    @Test
    public void test(){
        // System.setOut(new PrintStream(out));
        //System.out.print("hello");
        String2.main(new String[]{});
        Assertions.assertEquals("Original String : w3resource.com\r\n" +
                "Character(unicode point) = 51\r\n" +
                "Character(unicode point) = 101\r\n", out.toString());
        //System.setOut(origOut);
    }

}

pom.xml (TestingJunitSelenium)
 
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>TestingJunitSelenium</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>
<dependencies>
    <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>4.1.3</version>
    </dependency>
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>RELEASE</version>
        <scope>test</scope>
    </dependency>
</dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

public class Dates {
    public static void main(String[] args) {
       //чтобы получить текущее время LocalDate(1) - название класса, LocalDate(2) - название класса
        // у которого есть статический метод now (именно теперешнее время), date - переменная
        LocalDate date = LocalDate.now();
        System.out.println(date);

        LocalTime time = LocalTime.now();
        System.out.println(time);

        LocalDateTime dateTime = LocalDateTime.now();
        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        System.out.println(dateTimeFormatter.format(dateTime));

        Calendar calendar = new GregorianCalendar();
        Date dateNow = new Date();
        System.out.println(dateNow);
    }
}




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>SeleniunGithub</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <maven.compiler.source>13</maven.compiler.source>
        <maven.compiler.target>13</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.1.3</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.8.2</version>
        </dependency>
    </dependencies>

</project>


